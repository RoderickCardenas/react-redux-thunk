{"ast":null,"code":"var _jsxFileName = \"/Users/rod/Documents/GitHub/react-redux-boilerplate/src/App.js\";\nimport React from 'react';\nimport './App.css'; // import connect function from react-redux to give the component access to state and actions\n\nimport { connect } from 'react-redux'; // import all(*) as actions\n\nimport * as actions from './actions'; // import API file from API.js\n\nimport API from './API';\n\nconst App = props => {\n  const handleClick = () => {\n    return API.getFirstTwentyPokemon().then(resp => resp.json()).then(pokemon => props.getPokemon(pokemon.results));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"GET POKEMON\"));\n}; // connect the App component to state, in this case only the state for pokemon which starts as an empty array [].\n// connect takes two arguments, mapping state to your component(can be left as null if you need the actions with no state)\n// and actions, so now all actions are passed in as props\n\n\nexport default connect(state => ({\n  pokemon: state.pokemon\n}), actions)(App);","map":{"version":3,"sources":["/Users/rod/Documents/GitHub/react-redux-boilerplate/src/App.js"],"names":["React","connect","actions","API","App","props","handleClick","getFirstTwentyPokemon","then","resp","json","pokemon","getPokemon","results","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB,C,CAEA;;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,WAAW,GAAG,MAAM;AACxB,WAAOH,GAAG,CAACI,qBAAJ,GACJC,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECG,OAAO,IAAIN,KAAK,CAACO,UAAN,CAAiBD,OAAO,CAACE,OAAzB,CAFZ,CAAP;AAGD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF;AAKD,CAZD,C,CAaA;AACA;AACA;;;AACA,eAAeL,OAAO,CAACa,KAAK,KAAK;AAAEH,EAAAA,OAAO,EAAEG,KAAK,CAACH;AAAjB,CAAL,CAAN,EAAwCT,OAAxC,CAAP,CAAwDE,GAAxD,CAAf","sourcesContent":["import React from 'react'\nimport './App.css'\n\n// import connect function from react-redux to give the component access to state and actions\nimport { connect } from 'react-redux'\n\n// import all(*) as actions\nimport * as actions from './actions'\n\n// import API file from API.js\nimport API from './API'\n\nconst App = props => {\n  const handleClick = () => {\n    return API.getFirstTwentyPokemon()\n      .then(resp => resp.json())\n      .then(pokemon => props.getPokemon(pokemon.results))\n  }\n\n  return (\n    <div className='App'>\n      <button onClick={handleClick}>GET POKEMON</button>\n    </div>\n  )\n}\n// connect the App component to state, in this case only the state for pokemon which starts as an empty array [].\n// connect takes two arguments, mapping state to your component(can be left as null if you need the actions with no state)\n// and actions, so now all actions are passed in as props\nexport default connect(state => ({ pokemon: state.pokemon }), actions)(App)\n"]},"metadata":{},"sourceType":"module"}